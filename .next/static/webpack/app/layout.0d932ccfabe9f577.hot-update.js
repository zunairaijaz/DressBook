"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./lib/cart.ts":
/*!*********************!*\
  !*** ./lib/cart.ts ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(app-pages-browser)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/prisma */ \"(app-pages-browser)/./lib/prisma.ts\");\n\n// ðŸ›‘ CRITICAL FIX: Changed path to use alias @/lib/prisma. \n// If this fails, ensure you have \"paths\": { \"@/*\": [\"./*\"] } in your tsconfig.json.\n\n// ðŸ”‘ Placeholder User ID: In a real application, this value would be derived \n// from an authenticated session or a guest/anonymous token ID.\n// ðŸ”´ FIX THIS: The ID below MUST exist in your 'User' table to avoid the P2003 Foreign Key error.\nconst TEST_USER_ID = \"REPLACE_ME_WITH_A_VALID_USER_ID\"; // Example: \"usr_701d4a0f\"\n// --- GET all cart items ---\n// This function allows the client to retrieve the current cart contents.\nasync function GET() {\n    try {\n        const cartItems = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.cartItem.findMany({\n            where: {\n                userId: TEST_USER_ID\n            },\n            include: {\n                product: true\n            }\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(cartItems);\n    } catch (err) {\n        console.error(\"GET /api/cart error:\", err);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch cart\"\n        }, {\n            status: 500\n        });\n    }\n}\n// --- Add to cart (POST) ---\n// This function handles adding a product to the cart or updating its quantity.\n// It expects a payload like the one in your Canvas: \n// { \"productId\": \"...\", \"quantity\": 1, \"selectedVariant\": {} }\nasync function POST(req) {\n    const userId = TEST_USER_ID; // Use the confirmed existing user ID\n    try {\n        // 1. Capture the payload fields from the request body.\n        const { productId: productOrId, quantity, selectedVariant } = await req.json();\n        // 2. Safely extract the product ID string.\n        const actualProductId = typeof productOrId === 'object' && productOrId !== null && 'id' in productOrId ? productOrId.id : productOrId;\n        // 3. Basic Validation\n        if (!actualProductId || !quantity) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid request (missing productId or quantity)\"\n            }, {\n                status: 400\n            });\n        }\n        // 4. Check if the item already exists in the user's cart\n        const existing = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.cartItem.findFirst({\n            where: {\n                userId,\n                productId: actualProductId\n            }\n        });\n        if (existing) {\n            // 5. If it exists, update the quantity (add the new quantity to the existing one)\n            await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.cartItem.update({\n                where: {\n                    id: existing.id\n                },\n                data: {\n                    quantity: existing.quantity + quantity\n                }\n            });\n        } else {\n            // 6. If it does not exist, create a new cart item record\n            // This is the line that failed because the userId was missing from the User table.\n            await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.cartItem.create({\n                data: {\n                    userId,\n                    productId: actualProductId,\n                    quantity,\n                    selectedVariant: selectedVariant ? selectedVariant : null\n                }\n            });\n        }\n        // 7. Fetch and return the entire updated cart\n        const cart = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.cartItem.findMany({\n            where: {\n                userId\n            },\n            include: {\n                product: true\n            }\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(cart, {\n            status: existing ? 200 : 201\n        }); // 201 if created, 200 if updated\n    } catch (err) {\n        console.error(\"POST /api/cart fatal error:\", err);\n        console.error(\"Prisma Known Error Code: \".concat(err.code, \". Details: \").concat(err.message));\n        // Provide generic error feedback\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to add to cart\"\n        }, {\n            status: 500\n        });\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/cart.ts\n"));

/***/ })

});