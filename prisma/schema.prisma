generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  role      String     @default("user")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  cartItems CartItem[]
  orders    Order[]
}

model Product {
  id            String      @id @default(uuid())
  name          String
  price         Float
  originalPrice Float?
  description   String
  category      String
  brand         String
  images        String[]
  rating        Float?      @default(0)
  stock         Int
  sku           String      @unique
  material      String?
  gender        String?
  pattern       String?
  status        String
  dateAdded     DateTime    @default(now())
  cartItems     CartItem[]
  orderItems    OrderItem[]
  reviews       Review[]
  variants      Variant[]
}

model Variant {
  id        String          @id @default(uuid())
  type      String
  productId String
  product   Product         @relation(fields: [productId], references: [id])
  options   VariantOption[]
}

model VariantOption {
  id        String  @id @default(uuid())
  value     String
  stock     Int?
  variantId String
  variant   Variant @relation(fields: [variantId], references: [id])
}

model Review {
  id        String   @id @default(uuid())
  author    String
  rating    Int
  comment   String
  date      DateTime @default(now())
  productId String
  product   Product  @relation(fields: [productId], references: [id])
}

model CartItem {
  id              String   @id @default(uuid())
  userId          String
  productId       String
  quantity        Int      @default(1)
  selectedVariant Json?
  addedAt         DateTime @default(now())
  product         Product  @relation(fields: [productId], references: [id])
  user            User     @relation(fields: [userId], references: [id])
}

model Order {
  id            String      @id @default(uuid())
  userId        String
  date          DateTime    @default(now())
  datetime      DateTime    @default(now())
  status        String
  total         Float
  customerName  String
  customerEmail String
  user          User        @relation(fields: [userId], references: [id])
  items         OrderItem[]
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}
