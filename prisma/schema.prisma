generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---------- Users ----------
model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cartItems CartItem[]
  orders    Order[]
}

// ---------- Products ----------
model Product {
  id           String    @id @default(uuid())
  name         String
  price        Float
  originalPrice Float?   
  description  String
  category     String
  brand        String
  images       String[]      
  rating       Float?        @default(0)
  stock        Int
  sku          String        @unique
  material     String?
  gender       String?       
  pattern      String?
  status       String        
  dateAdded    DateTime      @default(now())

  variants     Variant[]
  reviews      Review[]
  cartItems    CartItem[]
  orderItems   OrderItem[]
}

// ---------- Variants ----------
model Variant {
  id        String     @id @default(uuid())
  type      String     
  product   Product    @relation(fields: [productId], references: [id])
  productId String
  options   VariantOption[]
}

model VariantOption {
  id       String   @id @default(uuid())
  value    String
  stock    Int?     
  variant  Variant  @relation(fields: [variantId], references: [id])
  variantId String
}

// ---------- Reviews ----------
model Review {
  id        String   @id @default(uuid())
  author    String
  rating    Int
  comment   String
  date      DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
}

// ---------- Cart Items ----------
model CartItem {
  id             String   @id @default(uuid())
  user           User     @relation(fields: [userId], references: [id])
  userId         String
  product        Product  @relation(fields: [productId], references: [id])
  productId      String
  quantity       Int      @default(1)
  selectedVariant Json?   
  addedAt        DateTime @default(now())
}

// ---------- Orders ----------
model Order {
  id            String      @id @default(uuid())
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  date          DateTime    @default(now())
  datetime      DateTime    @default(now())
  status        String      
  total         Float
  customerName  String
  customerEmail String
  items         OrderItem[]
}

model OrderItem {
  id        String   @id @default(uuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  price     Float
}
